syntax = "proto3";

package pb;

option go_package = "pb/";

// 定义rpc服务
service RpcService {
    rpc PutStream (stream PutStreamReq) returns (PutStreamResp);
    rpc RunCmd (CmdReq) returns (PutStreamResp);
    rpc Ping (GG) returns (GG);
    rpc GetNcid(GG) returns (Replay);
    rpc RunOoBwServer(OoBwServerReq) returns (Replay);
    rpc RunOoBwClient(OoBwClientReq) returns (Replay);
}

// putStream request
message PutStreamReq {
    string name = 1;
    string md5 = 2;
    string location = 3;
    bytes body = 4;
    string sn = 5;
    string port = 6;
    string nodelist = 7;
    int32 width = 8;
    uint32 uid = 9;
    uint32 gid = 10;
    uint32 filemod = 11;
    int64 modtime = 12;
}

// node struct
message Node {
    int32 width = 1;
    repeated Node nodes = 2;
    string value = 3;
}

// putStream/runcmd response
message PutStreamResp {
    repeated Replay replay = 1;
}

message Replay {
    bool pass = 1;
    string nodelist = 2;
    string msg = 3;
}

// runcmd request
message CmdReq {
    string cmd = 1;
    int32 timeout = 2; 
    string nodelist = 3;
    int32 width = 4;
    string port = 5;
}

message GG {
    string HH = 1;
}

// oo_bw_server 测试
message OoBwServerReq {
    string ncid = 1;
    string buffer = 2;
    int32 timeout = 3;
    int32 length = 4;
    int32 loop = 5;
}

// oo_bw_client 测试
message OoBwClientReq {
    string server = 1;
    string buffer = 2;
    int32 timeout = 3;
    int64 timer = 4;
    string port = 5;
    int32 length = 6;
    int32 loop = 7;
}



